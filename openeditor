#!/bin/bash

# opens a file in the editor of your choice
# good thing: it checks which editor is open and opens the file in that editor
# if no editor is found it defaults to a lightweight editor (like kwrite)

# the order in which to execute the commands
# breaks on success
# available are the following commands:
#
# kwrite_new_win
# quanta_new_win
# kate_new_win
#
# quanta_new_tab
# kate_new_tab
#
# for Protocol in Firefox go to about config
# Right-click -> New -> Boolean -> Name:
# network.protocol-handler.expose.foo -> Value -> false
# (Replace foo with the protocol you're specifying) 
# Then click a link and choose your editor \o/
#
# Url accepted :
# ./editor file://brol
# ./editor file://brol 12
# ./editor file://brol:12
# ./editor file://brol
# ./editor /var/brol:12
# ./editor editor://open/?url=file:///brol/file:12


order=(
#   debug
  kate_new_tab
  kate_new_win
  kwrite_new_win
)
# nothing should be changed below

function debug {
  echo "file: '$1' line: '$2'"
}
# new kate tab
function kate_new_tab {
  isrunning kate || return 1
  echo "open file in a new kate tab:"
  kate -u "$1" --line "$2"
}
# new kate window
function kate_new_win {
  echo "open file in kate:"
  kate "$1"  --line "$2"
}
# new kwrite window
function kwrite_new_win {
  echo "open file in kwrite:"
  kwrite "$1"
}

# new kdevelop window
function kdevelop_new_win_tab {
  echo "open file in kdevelop:"
  id=$(qdbus | grep kdevelop)
  file=$(readlink -f $1)
  if [[ ${id} ]]; then
    qdbus $id /org/kdevelop/DocumentController org.kdevelop.DocumentController.openDocumentSimple $file
  else
    kdevelop $1
  fi
}

# check if a process is running
function isrunning {
  pid=(`pidof $1`)
  return `[[ ${pid[0]} ]]`
}

# If we are comming from editor://open?url=file://brol:line
url=$1
if [[ "$1" =~ ^editor:.* ]]; then
    url=$(echo $1 |  sed -e 's/.*url=//')
fi

oldname=$url
#remove protocol for sed
fname=$(echo $url |  sed -e 's/^file:\///')
file=$(echo $fname | sed -e 's/:.*//g')
line=$(echo $fname | cut -d ':' -f2)

#re set protocol if removed
if [[ "$oldname" != "$fname" ]]; then
 file="file:/$file"
fi

if [[ "$line" = "$fname" ]]; then
 line=$2
fi

# call functions based on order defined above

for i in `seq 1 ${#order[@]}`;
do
  ${order[$i-1]} "$file" "$line" $&& exit 0
done
